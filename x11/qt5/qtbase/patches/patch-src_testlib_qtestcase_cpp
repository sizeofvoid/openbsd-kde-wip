$OpenBSD: patch-src_testlib_qtestcase_cpp,v 1.3 2017/10/24 10:12:19 rsadowski Exp $
Get rid of qstrcpy.
Index: src/testlib/qtestcase.cpp
--- src/testlib/qtestcase.cpp.orig
+++ src/testlib/qtestcase.cpp
@@ -2436,37 +2436,37 @@ template <> Q_TESTLIB_EXPORT char *QTest::toString<cha
     char *msg = new char[16];
     switch (c) {
     case 0x00:
-        qstrcpy(msg, "'\\0'");
+        strlcat(msg, "'\\0'", 16);
         break;
     case 0x07:
-        qstrcpy(msg, "'\\a'");
+        strlcat(msg, "'\\a'", 16);
         break;
     case 0x08:
-        qstrcpy(msg, "'\\b'");
+        strlcat(msg, "'\\b'", 16);
         break;
     case 0x09:
-        qstrcpy(msg, "'\\t'");
+        strlcat(msg, "'\\t'", 16);
         break;
     case 0x0a:
-        qstrcpy(msg, "'\\n'");
+        strlcat(msg, "'\\n'", 16);
         break;
     case 0x0b:
-        qstrcpy(msg, "'\\v'");
+        strlcat(msg, "'\\v'", 16);
         break;
     case 0x0c:
-        qstrcpy(msg, "'\\f'");
+        strlcat(msg, "'\\f'", 16);
         break;
     case 0x0d:
-        qstrcpy(msg, "'\\r'");
+        strlcat(msg, "'\\r'", 16);
         break;
     case 0x22:
-        qstrcpy(msg, "'\\\"'");
+        strlcat(msg, "'\\\"'", 16);
         break;
     case 0x27:
-        qstrcpy(msg, "'\\\''");
+        strlcat(msg, "'\\\''", 16);
         break;
     case 0x5c:
-        qstrcpy(msg, "'\\\\'");
+        strlcat(msg, "'\\\\'", 16);
         break;
     default:
         if (c < 0x20 || c >= 0x7F)
@@ -2483,8 +2483,7 @@ char *QTest::toString(const char *str)
 {
     if (!str)
         return 0;
-    char *msg = new char[strlen(str) + 1];
-    return qstrcpy(msg, str);
+    return qstrdup(str);
 }
 
 /*! \internal
